!!!
%html
  %head
    %meta{:content => 'text/html; charset=utf-8', 'http-equiv' => 'Content-type'}/
    %title= website_title_with_app_name

    = stylesheet_link_tag    'bootstrap_setup', :media => 'all'
    = stylesheet_link_tag    'wingolf_layout', :media => 'all'
    = stylesheet_link_tag    'application', :media => 'all'
    = stylesheet_link_tag    'print', :media => 'print'

    = favicon_link_tag 'favicon.ico'
    = favicon_link_tag 'fahne-144x144.png', rel: 'apple-touch-icon', type: 'image/png'

    %link{rel: 'search', href: opensearch_path, title: "Wingolfsplattform-Suche", type: 'application/opensearchdescription+xml'}

    = javascript_include_tag 'application'
    = gmaps4rails_api_script_tags
    = csrf_meta_tags
    = yield :head
  %body{:class => controller.controller_name, data: {locale: I18n.locale, navable: @navable.try(:to_global_id)}}
    - if user_account_signed_in?
      - Rack::MiniProfiler.step("#logged-in-bar") do
        #logged-in-bar.hidden-print
          #backendBar
            .content
              %ul.backendBarItems
                %li.first.backendBarItem.dropdown
                  %span.user_avatar
                    = render 'layouts/session_bar_avatar'
                  %span.user_name#user_name{data: {email: current_user.email, id: current_user.id, title: current_user.title}}
                    = link_to current_user.title, current_user
                  -#- if can? :use, :merit
                  -#  = link_to merit_indicator(current_user), user_path(current_user) + "#merit"
                  %b.caret
                  %ul.dropdown-menu
                    %li.user_name= current_user.title
                    %li.user_email= current_user.email
                    %li= link_to t(:my_posts), posts_path
                    %li= link_to t(:my_profile), current_user
                    %li= link_to t(:change_avatar), user_path(current_user, trigger_change_avatar: true)
                    %li= link_to t(:change_password), change_password_path
                    %li= link_to t(:settings), user_settings_path(current_user)
                    %li= button_to t(:sign_out), sign_out_path, method: :delete
                %li.backendBarItem
                  = link_to t(:my_profile), current_user, :class => 'my_profile'
                %li.backendBarItem.dropdown
                  -# link_to t( :my_groups ), main_app.my_groups_path, class: 'dropdown-toggle', data: { toggle: 'dropdown' }
                  = link_to my_groups_path, class: 'dropdown-toggle' do
                    = t :my_groups
                    %b.caret
                  %ul.dropdown-menu
                    = cached_groups_of_user_table current_user

                - # role indicator and preview menu
                = render partial: 'layouts/role_preview_switcher'

                = render partial: 'notifications/notifications_dropdown'

                - # %li.backendBarItem.dropdown
                - #   = link_to t(:bookmarks), my_bookmarks_path
                - #   %ul.dropdown-menu.my-favorites
                - #     = bookmarked_objects_lis( current_user )
                %li.last.backendBarItem
                  = button_to t(:sign_out), sign_out_path, method: :delete, id: 'sign_out'
            .clear
    - Rack::MiniProfiler.step("#header-bar") do
      #header-bar
        #headerBg.hidden-print
          #header
            #header_claim
              = image_tag( 'claim.png' )
            #header_logo
              = link_to( image_tag( 'logo.png' ), root_path )
              = beta_badge_with_link
            #header_help
              = render partial: 'support_requests/help_button'
            #header_search
              = render partial: 'shared/search_box'
            %span#category_indicator
              - Rack::MiniProfiler.step("#horizontal_nav") do
                #horizontal_nav= horizontal_nav
        #print-logo.visible-print
          .right= image_tag('logo.png')
    #contentBgLayer1
      #contentBgLayer2
        #contentBgLayer3
          #content_wrapper
            #toolbar
              - # %span#star_tool
              - #   = star_tool( current_user, @navable )
              %span#breadcrumb
                = breadcrumbs
              %span#access_indicator
                = access_indicator if current_user
            %span#content_area
            - Rack::MiniProfiler.step("#content_area") do
              #content
                - if show_vertical_nav?
                  .content_twoCols.content_twoCols-20-80
                    .content_twoCols_left.hidden-print
                      = render partial: 'layouts/vertical_nav'
                    .content_twoCols_right
                      #flash{data: {'turbolinks-temporary' => true}}= flash_area
                      = render partial: 'shared/read_only_mode_notice' if read_only_mode?
                      - Rack::MiniProfiler.step("content") do
                        = convert_to_content_box { yield }
                - else
                  = flash_area
                  = render partial: 'shared/read_only_mode_notice' if read_only_mode?
                  - Rack::MiniProfiler.step("content") do
                    = convert_to_content_box { yield }
                .clear

    .bottom_page_footer.hidden-print= render partial: 'layouts/footer' unless @hide_footer
    .hidden-print= debug(params) if Rails.env.development?
    = yield :scripts
